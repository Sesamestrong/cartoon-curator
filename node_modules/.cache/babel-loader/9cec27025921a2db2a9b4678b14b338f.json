{"ast":null,"code":"import _regeneratorRuntime from \"/workspace/cartoon-curator/master/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/workspace/cartoon-curator/master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/workspace/cartoon-curator/master/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/workspace/cartoon-curator/master/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/workspace/cartoon-curator/master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/cartoon-curator/master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/cartoon-curator/master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/cartoon-curator/master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/cartoon-curator/master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspace/cartoon-curator/master/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport moment from \"moment\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Newspaper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar Newspaper =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Newspaper, _Component2);\n\n  function Newspaper(props) {\n    var _this;\n\n    _classCallCheck(this, Newspaper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Newspaper).call(this, props));\n    _this.state = {\n      date: window.location.pathname == \"/\" ? new Date() : new Date(new URLSearchParams(window.location.search).get(\"date\")),\n      comics: [{\n        id: \"pearlsbeforeswine\",\n        name: \"Pearls Before Swine\"\n      }, {\n        id: \"dilbert-classics\",\n        name: \"Dilbert Classics\"\n      }, {\n        id: \"lio\",\n        name: \"Lio\"\n      }, {\n        id: \"calvinandhobbes\",\n        name: \"Calvin and Hobbes\"\n      }, {\n        id: \"foxtrot\",\n        name: \"Foxtrot\"\n      }, {\n        id: \"dilbert\",\n        name: \"Dilbert\"\n      }, {\n        id: \"garfield\",\n        name: \"Garfield\"\n      }]\n    };\n    var date = moment(_this.state.date).format(\"YYYY/MM/DD\");\n    document.title = moment(_this.state.date).format(\"MMMM D[, ]YYYY\");\n\n    var newComics = _this.state.comics.map(function (comic) {\n      return _objectSpread({}, comic, {\n        date: date\n      });\n    });\n\n    _this.state.comics = newComics;\n    return _this;\n  }\n\n  _createClass(Newspaper, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //console.log(this.state.comics);\n      return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.addDays(-1);\n        },\n        className: \"changeDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"<\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.addDays(1);\n        },\n        className: \"changeDate next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \">\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.state.comics.map(function (i, index) {\n        return React.createElement(Comic, {\n          remove: function remove() {\n            return _this2.popComic(index);\n          },\n          setDate: function setDate(path) {\n            return _this2.setDate(index, path);\n          },\n          key: i.id,\n          date: i.date,\n          id: i.id,\n          name: i.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        className: \"input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.addComic();\n        },\n        className: \"plus\",\n        value: \"+\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"addComic\",\n    value: function addComic() {\n      this.setState({\n        comics: [].concat(_toConsumableArray(this.state.comics), [{\n          id: \"\",\n          name: \"\",\n          date: moment(this.state.date).format(\"YYYY/MM/DD\")\n        }])\n      });\n    }\n  }, {\n    key: \"setDate\",\n    value: function setDate(id, path) {\n      //console.log(\"Setting date!\",this.state.comics[id],id,path);\n      var newComics = _toConsumableArray(this.state.comics);\n\n      var newThing = _objectSpread({}, newComics[id]);\n\n      newThing.date = path.replace(/\\/[^\\/]*\\/(.*)$/g, \"$1\");\n      newComics[id] = newThing;\n      this.setState({\n        comics: newComics\n      });\n    }\n  }, {\n    key: \"popComic\",\n    value: function popComic(index) {\n      var list = _toConsumableArray(this.state.comics);\n\n      var ret = list.splice(index, 1);\n      this.setState({\n        comics: list\n      });\n      return ret;\n    }\n  }, {\n    key: \"addDays\",\n    value: function addDays(numDays) {\n      var newDate = new Date(this.state.date);\n      newDate.setDate(this.state.date.getDate() + numDays);\n      this.state.date = newDate;\n      this.applyDate(moment(newDate).format(\"YYYY/MM/DD\"));\n    }\n  }, {\n    key: \"applyDate\",\n    value: function applyDate(date) {\n      var newComics = this.state.comics.map(function (comic) {\n        return _objectSpread({}, comic, {\n          date: date\n        });\n      });\n      document.title = moment(date).format(\"MMMM D[, ]YYYY\");\n      window.history.pushState(date, moment(date).format(\"MMMM D[,] YYYY\"), '/?date=' + encodeURIComponent(date));\n      this.setState({\n        comics: newComics\n      });\n    }\n  }]);\n\n  return Newspaper;\n}(Component);\n\nvar Comic =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Comic, _Component3);\n\n  function Comic(props) {\n    var _this3;\n\n    _classCallCheck(this, Comic);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Comic).call(this, props));\n    _this3.date = _this3.props.date;\n    _this3.state = {\n      path: \"\",\n      strips: {},\n      shown: true,\n      id: _this3.props.id,\n      name: _this3.props.name\n    };\n\n    if (_this3.state.id) {\n      _this3.state.path = _this3.getPath();\n\n      _this3.findUrl(_this3.state.path);\n    }\n\n    return _this3;\n  }\n\n  _createClass(Comic, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      this.date = this.props.date; //console.log(this.props.date,\"is date at render\");\n\n      this.state.path = this.getPath();\n      console.log(this.state.path); //console.log(\"now, path is\",this.state.path,this.date);\n\n      var thisComic = this.state.strips[this.state.path] || {}; //console.log(\"rendering in render\",this.state,\"thisComic at render\",thisComic);\n      //if(!thisComic.url)\n\n      this.findUrl(this.state.path);\n      return this.state.path !== \"\" && this.state.id ? thisComic.url ? React.createElement(\"div\", {\n        className: \"comic-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.path.replace(/^\\/[^\\/]+\\/(.*)$/g, \"$1\")), React.createElement(\"span\", {\n        onClick: this.props.remove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"\\u274C\"), React.createElement(\"span\", {\n        className: \"comic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this4.findUrl(thisComic.previous);\n        },\n        value: \"\\u2190\",\n        className: \"arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        ref: \"next\",\n        style: {\n          display: \"none\"\n        },\n        src: (this.state.strips[thisComic.previous] || {}).url,\n        onClick: function onClick() {\n          return _this4.findUrl(thisComic.previous);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        ref: \"this\",\n        src: thisComic.url,\n        onClick: function onClick() {\n          return _this4.findUrl(thisComic.previous);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        ref: \"last\",\n        style: {\n          display: \"none\"\n        },\n        src: (this.state.strips[thisComic.next] || {}).url,\n        onClick: function onClick() {\n          return _this4.findUrl(thisComic.previous);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this4.findUrl(thisComic.next);\n        },\n        value: \"\\u2192\",\n        className: \"arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))) : null : React.createElement(\"div\", {\n        className: \"input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(ComicChoice, {\n        updateValue: function updateValue(val) {\n          _this4.state.id = val.id;\n          _this4.state.name = val.name;\n          _this4.state.path = _this4.getPath();\n\n          _this4.findUrl();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n      /*\n      Old:\n           <input type=\"text\" onChange={event=>{this.state.name=event.target.value;if(this.state.id)this.findUrl();}} placeholder=\"Name\"/>\n          <input type=\"text\" onChange={event=>{this.state.id=event.target.value;this.state.path=this.getPath();this.findUrl();}} placeholder=\"Comic ID\"/>\n      */\n    }\n  }, {\n    key: \"findUrl\",\n    value: function () {\n      var _findUrl = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(path) {\n        var thisComic, strips, num, url, json, _i, _arr, order, _url, _json, oldKeys;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //console.log(\"running findUrl\");\n                path = path || this.getPath();\n                strips = {};\n                console.log(\"Finding\", path);\n                num = Math.random();\n\n                if (Object.keys(this.state.strips).includes(path)) {\n                  _context.next = 21;\n                  break;\n                }\n\n                url = \"https://Comic-Strip-API.426729.repl.co/api\".concat(path);\n                console.log(\"trying\", url);\n                _context.next = 9;\n                return fetch(url);\n\n              case 9:\n                json = _context.sent;\n                console.log(\"Got response\");\n                _context.next = 13;\n                return json.json();\n\n              case 13:\n                json = _context.sent;\n                console.log(\"Awaited\");\n\n                if (!json.error) {\n                  _context.next = 17;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", console.log(url, \"failed\"));\n\n              case 17:\n                thisComic = json;\n                console.log(json);\n                _context.next = 23;\n                break;\n\n              case 21:\n                console.log(\"Cached\", path);\n                thisComic = this.state.strips[path]; //console.log(\"thisComic \",thisComic);\n\n              case 23:\n                ////console.log(\"thisComic\",thisComic);\n                strips[path] = thisComic;\n\n                if (this.state.path !== path) {\n                  this.props.setDate(path);\n                } // this.setState({path});\n\n\n                _i = 0, _arr = [\"previous\", \"next\"];\n\n              case 26:\n                if (!(_i < _arr.length)) {\n                  _context.next = 49;\n                  break;\n                }\n\n                order = _arr[_i];\n\n                if (!(!this.state.strips[thisComic[order]] && thisComic[order] && thisComic[order] !== \"\")) {\n                  _context.next = 45;\n                  break;\n                }\n\n                //console.log(\"Not working path\",thisComic[order]);\n                _url = \"https://Comic-Strip-API.426729.repl.co/api\".concat(thisComic[order]); //console.log(url);\n\n                _context.next = 32;\n                return fetch(_url);\n\n              case 32:\n                _json = _context.sent;\n                _context.prev = 33;\n                _context.next = 36;\n                return _json.json();\n\n              case 36:\n                _json = _context.sent;\n                _context.next = 42;\n                break;\n\n              case 39:\n                _context.prev = 39;\n                _context.t0 = _context[\"catch\"](33);\n                return _context.abrupt(\"continue\", 46);\n\n              case 42:\n                //console.log(\"Adding the cache for\",thisComic[order],json.url)\n                strips[thisComic[order]] = _json;\n                _context.next = 46;\n                break;\n\n              case 45:\n                strips[thisComic[order]] = this.state.strips[thisComic[order]];\n\n              case 46:\n                _i++;\n                _context.next = 26;\n                break;\n\n              case 49:\n                //console.log(\"Strips\")\n                oldKeys = Object.keys(this.state.strips);\n\n                if (Object.keys(strips).filter(function (i) {\n                  return !oldKeys.includes(i);\n                }).length > 0) {\n                  this.setState({\n                    strips: strips\n                  });\n                }\n\n              case 51:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[33, 39]]);\n      }));\n\n      function findUrl(_x) {\n        return _findUrl.apply(this, arguments);\n      }\n\n      return findUrl;\n    }()\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.date;\n      console.log(this.date);\n      return \"/\".concat(this.state.id, \"/\").concat(date);\n    }\n  }]);\n\n  return Comic;\n}(Component);\n\nvar ComicChoice =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(ComicChoice, _Component4);\n\n  function ComicChoice(props) {\n    var _this5;\n\n    _classCallCheck(this, ComicChoice);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(ComicChoice).call(this, props));\n    _this5.state = {\n      strips: {\n        \"Select\": \"\"\n      }\n    };\n\n    _this5.findStrips();\n\n    return _this5;\n  }\n\n  _createClass(ComicChoice, [{\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(\"select\", {\n        className: \"comic-choice\",\n        onChange: function onChange(event) {\n          return _this6.props.updateValue({\n            name: event.target.value,\n            id: _this6.state.strips[event.target.value]\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, Object.keys(this.state.strips).map(function (i) {\n        return React.createElement(\"option\", {\n          value: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, i);\n      }));\n    }\n  }, {\n    key: \"findStrips\",\n    value: function () {\n      var _findStrips = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var strips, newStrips, _i2, _Object$keys, key;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"https://comic-strip-api.426729.repl.co/ids\");\n\n              case 2:\n                strips = _context2.sent;\n                _context2.next = 5;\n                return strips.json();\n\n              case 5:\n                strips = _context2.sent;\n                newStrips = {\n                  \"Select\": \"\"\n                };\n\n                for (_i2 = 0, _Object$keys = Object.keys(strips); _i2 < _Object$keys.length; _i2++) {\n                  key = _Object$keys[_i2];\n                  newStrips = _objectSpread({}, newStrips, strips[key]);\n                }\n\n                this.setState({\n                  strips: newStrips\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function findStrips() {\n        return _findStrips.apply(this, arguments);\n      }\n\n      return findStrips;\n    }()\n  }]);\n\n  return ComicChoice;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/workspace/cartoon-curator/master/src/App.js"],"names":["React","Component","moment","App","Newspaper","props","state","date","window","location","pathname","Date","URLSearchParams","search","get","comics","id","name","format","document","title","newComics","map","comic","addDays","i","index","popComic","path","setDate","addComic","setState","newThing","replace","list","ret","splice","numDays","newDate","getDate","applyDate","history","pushState","encodeURIComponent","Comic","strips","shown","getPath","findUrl","console","log","thisComic","url","remove","previous","display","next","val","num","Math","random","Object","keys","includes","fetch","json","error","order","oldKeys","filter","length","ComicChoice","findStrips","event","updateValue","target","value","newStrips","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport moment from \"moment\";\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return <Newspaper/>;\n  }\n}\n\nclass Newspaper extends Component {\nconstructor(props){\n    super(props);\n    this.state={date:window.location.pathname==\"/\"?new Date():new Date(new URLSearchParams(window.location.search).get(\"date\")),comics:[{id:\"pearlsbeforeswine\",name:\"Pearls Before Swine\"},\n{id:\"dilbert-classics\",name:\"Dilbert Classics\"},\n{id:\"lio\",name:\"Lio\"},\n{id:\"calvinandhobbes\",name:\"Calvin and Hobbes\"},\n{id:\"foxtrot\",name:\"Foxtrot\"},\n{id:\"dilbert\",name:\"Dilbert\"},\n{id:\"garfield\",name:\"Garfield\"},]};\n  let date=moment(this.state.date).format(\"YYYY/MM/DD\");\n  document.title=moment(this.state.date).format(\"MMMM D[, ]YYYY\");\n  let newComics=this.state.comics.map(comic=>({...comic,date}));\n  this.state.comics=newComics;\n  }\n  render() {\n    //console.log(this.state.comics);\n    return (\n      <>\n      <button onClick={()=>this.addDays(-1)} className=\"changeDate\">&lt;</button>\n      <button onClick={()=>this.addDays(1)} className=\"changeDate next\">&gt;</button>\n      <div className=\"App\">\n        {this.state.comics.map((i,index)=><Comic remove={()=>this.popComic(index)} setDate={path=>this.setDate(index,path)} key={i.id} date={i.date} id={i.id} name={i.name}/>)}\n        <div className=\"input-container\">\n        <input type=\"button\" onClick={()=>this.addComic()} className=\"plus\" value=\"+\"/>\n        </div>\n      </div>\n      </>\n    );\n  }\n  addComic(){\n    this.setState({comics:[...this.state.comics,{id:\"\",name:\"\",date:moment(this.state.date).format(\"YYYY/MM/DD\")}]});\n  }\n  setDate(id,path){\n    //console.log(\"Setting date!\",this.state.comics[id],id,path);\n    let newComics=[...this.state.comics];\n    let newThing={...newComics[id]};\n    newThing.date=path.replace(/\\/[^\\/]*\\/(.*)$/g,\"$1\");\n    newComics[id]=newThing;\n    this.setState({comics:newComics});\n  }\n  popComic(index){\n    let list=[...this.state.comics];\n    let ret=list.splice(index,1);\n    this.setState({comics:list});\n    return ret;\n  }\n  addDays(numDays){\n    let newDate=new Date(this.state.date);\n    newDate.setDate(this.state.date.getDate()+numDays);\n    this.state.date=newDate;\n    this.applyDate(moment(newDate).format(\"YYYY/MM/DD\"));\n  }\n  applyDate(date){\n    let newComics=this.state.comics.map(comic=>({...comic,date}));\n    document.title=moment(date).format(\"MMMM D[, ]YYYY\");\n    window.history.pushState(date, moment(date).format(\"MMMM D[,] YYYY\"), '/?date='+encodeURIComponent(date));\n    this.setState({comics:newComics});\n  }\n}\n\nclass Comic extends Component{\n  constructor(props){\n    super(props);\n    this.date=this.props.date;\n    this.state={path:\"\",strips:{},shown:true,id:this.props.id,name:this.props.name};\n    if(this.state.id) {\n      this.state.path=this.getPath();\n      this.findUrl(this.state.path);\n    }\n  }\n  render(){\n    this.date=this.props.date;\n    //console.log(this.props.date,\"is date at render\");\n    this.state.path=this.getPath();\n    console.log(this.state.path);\n    //console.log(\"now, path is\",this.state.path,this.date);\n    let thisComic=this.state.strips[this.state.path]||{};\n    //console.log(\"rendering in render\",this.state,\"thisComic at render\",thisComic);\n    //if(!thisComic.url)\n    this.findUrl(this.state.path);\n    return this.state.path!==\"\"&&this.state.id?\n    (\n      thisComic.url?<div className=\"comic-container\">\n        <h2>{this.state.name}</h2>\n        <p>{this.state.path.replace(/^\\/[^\\/]+\\/(.*)$/g,\"$1\")}</p>\n        <span onClick={this.props.remove}>❌</span>\n        <span className=\"comic\">\n        <input type=\"button\" onClick={()=>this.findUrl(thisComic.previous)} value=\"←\" className=\"arrow\"/>\n        <img ref=\"next\" style={{display:\"none\"}} src={(this.state.strips[thisComic.previous]||{}).url} onClick={()=>this.findUrl(thisComic.previous)}/>\n        <span>\n        <img ref=\"this\" src={thisComic.url} onClick={()=>this.findUrl(thisComic.previous)}/>\n        </span>\n        <img ref=\"last\" style={{display:\"none\"}} src={(this.state.strips[thisComic.next]||{}).url} onClick={()=>this.findUrl(thisComic.previous)}/>\n        <input type=\"button\" onClick={()=>this.findUrl(thisComic.next)} value=\"→\" className=\"arrow\"/>\n        </span>\n      </div>:null\n    ):(\n      <div className=\"input-container\">\n      <ComicChoice updateValue={(val)=>{this.state.id=val.id;this.state.name=val.name;this.state.path=this.getPath();this.findUrl();}}/>\n      </div>\n    );\n    /*\n    Old:\n\n        <input type=\"text\" onChange={event=>{this.state.name=event.target.value;if(this.state.id)this.findUrl();}} placeholder=\"Name\"/>\n        <input type=\"text\" onChange={event=>{this.state.id=event.target.value;this.state.path=this.getPath();this.findUrl();}} placeholder=\"Comic ID\"/>\n    */\n  }\n  async findUrl(path){\n    //console.log(\"running findUrl\");\n    path=path||this.getPath();\n    let thisComic, strips={};\n    console.log(\"Finding\",path);\n    let num=Math.random();\n    if(!Object.keys(this.state.strips).includes(path)){\n      let url=`https://Comic-Strip-API.426729.repl.co/api${path}`;\n      console.log(\"trying\",url);\n      let json=await fetch(url);\n      console.log(\"Got response\");\n      json=await json.json();\n      console.log(\"Awaited\");\n      if(json.error) return console.log(url,\"failed\");\n      thisComic=json;\n      console.log(json);\n    }\n    else {\n      console.log(\"Cached\",path);\n      thisComic=this.state.strips[path];\n      //console.log(\"thisComic \",thisComic);\n    }\n    ////console.log(\"thisComic\",thisComic);\n    strips[path]=thisComic;\n    if(this.state.path!==path) {\n      this.props.setDate(path);\n    }\n    // this.setState({path});\n    for(let order of [\"previous\",\"next\"]){\n      if(!this.state.strips[thisComic[order]]&&thisComic[order]&&thisComic[order]!==\"\") {\n        //console.log(\"Not working path\",thisComic[order]);\n        let url=`https://Comic-Strip-API.426729.repl.co/api${thisComic[order]}`;\n        //console.log(url);\n        let json=await fetch(url);\n        try{json=await json.json();} catch(err){continue;}\n        //console.log(\"Adding the cache for\",thisComic[order],json.url)\n        strips[thisComic[order]]=json;\n      }\n      else {\n        strips[thisComic[order]]=this.state.strips[thisComic[order]];\n      }\n    }\n    //console.log(\"Strips\")\n    let oldKeys=Object.keys(this.state.strips);\n    if(Object.keys(strips).filter(i=>!oldKeys.includes(i)).length>0){\n    this.setState({strips});}\n  }\n  getPath(date=this.date){\n    console.log(this.date);\n    return `/${this.state.id}/${date}`;\n  }\n}\n\nclass ComicChoice extends Component{\n  constructor(props) {\n    super(props);\n    this.state={strips:{\"Select\":\"\"}};\n    this.findStrips();\n  }\n  render(){\n    return <select className=\"comic-choice\" onChange={event=>this.props.updateValue({name:event.target.value,id:this.state.strips[event.target.value]})}>\n    {Object.keys(this.state.strips).map(i=><option value={i}>{i}</option>)}\n    </select>;\n  }\n  async findStrips(){\n    let strips=await fetch(\"https://comic-strip-api.426729.repl.co/ids\");\n    strips=await strips.json();\n    let newStrips={\"Select\":\"\"};\n    for(let key of Object.keys(strips)){\n      newStrips={...newStrips,...strips[key]};\n    }\n    this.setState({strips:newStrips});\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}