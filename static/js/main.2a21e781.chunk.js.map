{"version":3,"sources":["js/util.js","js/components/ComicChoice.js","js/components/Comic.js","js/pages/Newspaper.js","js/pages/Editor.js","js/App.js","index.js"],"names":["API_URL","window","location","origin","startsWith","getCookie","name","unescape","document","cookie","replace","RegExp","ComicChoice","props","state","strips","findStrips","className","onChange","event","updateValue","target","value","Object","keys","this","sort","last","next","map","i","key","fetch","json","newStrips","series","console","log","indSeries","reduce","id","provider","setState","Component","Media","mediaType","alt","Comic","date","shown","undefined","findUrl","thisComic","url","role","aria-label","onClick","remove","ref","rel","as","href","previous","src","type","setDate","val","updateVals","encodeURIComponent","then","resp","includes","getUrl","error","order","oldKeys","filter","length","newProps","oldState","Newspaper","search","URLSearchParams","get","Date","comics","zip","rows","slice","ind","getAll","JSON","parse","moment","format","title","newComics","comic","setURL","addDays","index","newVal","popComic","path","addComic","assign","newThing","list","ret","splice","numDays","newDate","getDate","applyDate","str","doQuery","mom","delete","append","forEach","escape","stringify","dateStuff","part","set","history","pushState","toString","App","currJson","first","password","output","apiUrl","toEdit","res","text","replaceAll","navigator","clipboard","writeText","editorProps","style","outerBox","flexGrow","height","container","width","theme","size","evt","query","runJSON","copyToClipboard","placeholder","tempJson","jsObject","tempStr","maxWidth","readOnly","parsed","method","mode","headers","body","alert","message","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2a21e781.chunk.js","sourcesContent":["// import 'url-search-params-polyfill';\r\n// /*import 'core-js';*/\r\n// import 'core-js/features/promise';\r\n// import 'core-js/features/array/includes';\r\n// import 'core-js/web/url-search-params';\r\n// import 'whatwg-fetch';\r\n\r\nconst API_URL = window.location.origin.startsWith('http://localhost:') ? \"http://localhost:3000\" : \"https://api.freecomics.ml\" /*\"https://Comic-Strip-API.426729.repl.co\"*/ ;\r\nconst API_VERSION = \"v1\";\r\nconst SAVE_AS_URL = false;\r\n\r\nfunction dateFromPath(path) {\r\n    return path.replace(/\\/[^/]*\\/(.*)$/g, \"$1\");\r\n}\r\n\r\nfunction getCookie(name) {\r\n    return unescape(document.cookie.replace(new RegExp(\"(?:(?:^|.*;\\\\s*)\" + name + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\"));\r\n}\r\n\r\nexport {\r\n    API_URL,\r\n    API_VERSION,\r\n    dateFromPath,\r\n    getCookie,\r\n    SAVE_AS_URL\r\n};\r\n","import React, {\r\n    Component\r\n} from 'react';\r\nimport {\r\n    API_URL,\r\n    API_VERSION\r\n} from '../util';\r\n//TODO Comply with the v1 api and the new provider attribute\r\nexport default class ComicChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            strips: {\r\n                \"Select\": \"\"\r\n            }\r\n        };\r\n        this.findStrips();\r\n    }\r\n    render() {\r\n        return <select className=\"comic-choice\" onChange={event=>this.props.updateValue({name:event.target.value,...this.state.strips[event.target.value]})}>\r\n    {Object.keys(this.state.strips).sort((last,next)=>next>last).map(i=><option key={i} value={i}>{i}</option>)}\r\n    </select>;\r\n    }\r\n    async findStrips() {\r\n        let strips = await fetch(`${API_URL}/api/${API_VERSION}/ids`);\r\n        strips = await strips.json();\r\n        let newStrips = {\r\n            \"Select\": [null,null]\r\n        };\r\n        for (let key of Object.keys(strips)) {\r\n            const series=strips[key];\r\n            console.log(series);\r\n            const indSeries=series.reduce((last,next)=>({...last,[next]:{id:next,provider:key}}),{});\r\n            newStrips = { ...newStrips,\r\n                ...indSeries\r\n            };\r\n        }\r\n            console.log(newStrips);\r\n        this.setState({\r\n            strips: newStrips\r\n        });\r\n    }\r\n}\r\n","import React, {\r\n    Component\r\n} from \"react\";\r\nimport {\r\n    API_URL,\r\n    API_VERSION,\r\n} from \"../util\";\r\nimport ComicChoice from \"./ComicChoice\";\r\n\r\nconst Media=(props)=>props.mediaType===\"video\"?<video {...props}></video>:<img alt={props.alt} {...props}/>;\r\n\r\nexport default class Comic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: this.props.date||\"\",\r\n            strips: {},\r\n            shown: true,\r\n            id: this.props.id,\r\n            name: undefined,\r\n            provider: this.props.provider,\r\n            mediaType:this.props.mediaType\r\n        };\r\n    }\r\n    static getDerivedStateFromProps(newProps, oldState) {\r\n        return newProps.date !== oldState.date ? {\r\n            date: newProps.date\r\n        } : null;\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.id) this.findUrl(this.state.date);\r\n    }\r\n    componentDidUpdate() {\r\n        this.findUrl();\r\n    }\r\n    render() {\r\n        let thisComic = this.state.strips[this.state.date] || {};\r\n        console.log(\"mediaType\",this.state.mediaType);\r\n\r\n        return this.state.date !== \"\" && this.state.id ? (\r\n            thisComic.url ? (\r\n                <div className=\"comic-container\">\r\n          <h2>{this.state.name}</h2>\r\n          <p>{this.state.date}</p>\r\n          <span role=\"img\" aria-label=\"Delete\" onClick={this.props.remove}>\r\n            ❌\r\n          </span>\r\n          <div className=\"comic\">\r\n            <link\r\n              ref=\"previous\"\r\n              rel=\"preload\"\r\n              as=\"image\"\r\n              href={(this.state.strips[thisComic.previous] || {}).url}\r\n            />\r\n            <Media\r\n              ref=\"this\"\r\n              alt={this.state.name || this.state.id + \" comic strip\"}\r\n              src={thisComic.url}\r\n              mediaType={thisComic.mediaType}\r\n            />\r\n            <link\r\n              ref=\"next\"\r\n              rel=\"preload\"\r\n              as=\"image\" // TODO support video preloading\r\n              href={(this.state.strips[thisComic.next] || {}).url}\r\n            />\r\n            <div className=\"overlay\">\r\n              <input\r\n                type=\"button\"\r\n                onClick={() => this.props.setDate(thisComic.previous)}\r\n                value=\"\"\r\n                className=\"arrow\"\r\n              />\r\n              <input\r\n                type=\"button\"\r\n                onClick={() => this.props.setDate(thisComic.next)}\r\n                value=\"\"\r\n                className=\"arrow\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n            ) : null\r\n        ) : (\r\n            <div className=\"input-container\">\r\n        <ComicChoice\r\n          updateValue={val =>{\r\n              console.log(\"updateValue\",val);\r\n              this.props.updateVals({ id: val.id, name: val.name,provider:val.provider })\r\n          }\r\n          }\r\n        />\r\n      </div>\r\n        );\r\n    }\r\n    async findUrl(date) {\r\n        if(!(this.state.id&&this.state.provider)) return;\r\n        if(this.state.id&&this.state.provider&&!this.state.name) {\r\n            fetch(`${API_URL}/api/${API_VERSION}/${encodeURIComponent(this.state.provider)}/${encodeURIComponent(this.state.id)}`)\r\n                .then(resp=>resp.json()).then(json=>this.setState({name:json.name}));\r\n        }\r\n        date = date || this.state.date;\r\n        let thisComic,\r\n            strips = {};\r\n        if (!Object.keys(this.state.strips).includes(date)) {\r\n            let url = this.getUrl(date);\r\n            let json = await fetch(url);\r\n            json = await json.json();\r\n            if (!json||json.error) {\r\n                console.log(url, \"failed\");\r\n            }\r\n            thisComic = json||undefined;\r\n        } else {\r\n            thisComic = this.state.strips[date];\r\n        }\r\n        strips[date] = thisComic||undefined;\r\n        if (this.state.date !== date) {\r\n            this.setState({\r\n                date,\r\n                strips\r\n            });\r\n        }\r\n        for (let order of [\"previous\", \"next\"]) {\r\n            if (!this.state.strips[thisComic[order]] &&\r\n                thisComic[order] &&\r\n                thisComic[order] !== \"\"\r\n            ) {\r\n                let url = this.getUrl(thisComic[order]);\r\n                let json = await fetch(url);\r\n                try {\r\n                    json = await json.json();\r\n                } catch (err) {\r\n                    continue;\r\n                }\r\n                strips[thisComic[order]] = json||undefined;\r\n            } else {\r\n                strips[thisComic[order]] = this.state.strips[thisComic[order]];\r\n            }\r\n        }\r\n        let oldKeys = Object.keys(this.state.strips);\r\n        if (Object.keys(strips).filter(i => !oldKeys.includes(i)).length > 0) {\r\n            this.setState({\r\n                strips\r\n            });\r\n        }\r\n    }\r\n    getUrl(date) {\r\n        return `${API_URL}/api/${API_VERSION}/${encodeURIComponent(this.state.provider)}/${encodeURIComponent(this.state.id)}/${date}`\r\n    }\r\n}\r\n","import moment from \"moment\";\r\nimport React, {\r\n    Component\r\n} from \"react\";\r\nimport Comic from \"../components/Comic\";\r\nimport {\r\n    getCookie,\r\n    SAVE_AS_URL,\r\n} from \"../util\";\r\n\r\nexport default class Newspaper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let search = new URLSearchParams(window.location.search);\r\n        this.url = search;\r\n        this.state = {\r\n            date: [\"year\", \"month\", \"day\"].reduce(\r\n                    (last, next) => last || !search.get(next),\r\n                    false\r\n                ) ?\r\n                new Date() : new Date(\r\n                    search.get(\"year\"),\r\n                    search.get(\"month\") - 1,\r\n                    search.get(\"day\")\r\n                ),\r\n            comics: []\r\n        };\r\n        const zip = (...rows) => rows.reduce((last, next) => last.slice(0, next.length).map((i, ind) => [i, next[ind]]));\r\n        let comics = zip(search.getAll(\"comic\"), search.getAll(\"provider\"))\r\n        comics = comics.length > 0 ? comics :\r\n            zip(JSON.parse(getCookie(\"comic\") || \"[]\"), JSON.parse(getCookie(\"provider\") || \"[]\"));\r\n        comics = comics.length > 0 ? comics.map(i => ({\r\n            id: i[0],\r\n            provider: i[1],\r\n        })) : [{\r\n                provider: \"gocomics\",\r\n                id: \"pearlsbeforeswine\",\r\n            },\r\n            {\r\n                provider: \"dilbert\",\r\n                id: \"dilbert\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"dilbert-classics\",\r\n            },\r\n            {\r\n                provider: \"xkcd\",\r\n                id: \"xkcd\",\r\n            },\r\n            {\r\n                provider: \"smbc\",\r\n                id: \"smbc\",\r\n            },\r\n            {\r\n                provider: \"comicskingdom\",\r\n                id: \"sherman-s-lagoon\",\r\n            },\r\n            {\r\n                provider: \"comicskingdom\",\r\n                id: \"dustin\",\r\n            },\r\n            {\r\n                provider: \"comicskingdom\",\r\n                id: \"rhymes-with-orange\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"lio\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"calvinandhobbes\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"foxtrot\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"garfield\",\r\n            }\r\n        ];\r\n        this.state.comics = comics;\r\n        let date = moment(this.state.date).format(\"YYYY/M/D\");\r\n        document.title = moment(this.state.date).format(\"MMMM D[, ]YYYY\");\r\n        let newComics = this.state.comics.map(comic => ({ ...comic,\r\n            date\r\n        }));\r\n        this.state.comics = newComics;\r\n        if(search.get(\"sync\")===\"true\") this.setURL(this.state.comics,this.state.date,true);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n        <div className=\"navBar\">\r\n          <button onClick={() => this.addDays(-1)} className=\"changeDate\">\r\n            &lt;\r\n          </button>\r\n          <h1 className=\"title\">Cartoon Curator</h1>\r\n          <button onClick={() => this.addDays(1)} className=\"changeDate next\">\r\n            &gt;\r\n          </button>\r\n        </div>\r\n        <div className=\"body\">\r\n          {this.state.comics.map((i, index) => (\r\n            <Comic\r\n              updateVals={newVal => this.updateValue(index, newVal)}\r\n              remove={() => this.popComic(index)}\r\n              setDate={path => this.setDate(index, path)}\r\n              key={i.id}\r\n              date={i.date}\r\n              id={i.id}\r\n              provider={i.provider}\r\n              mediaType={i.mediaType}\r\n            />\r\n          ))}\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"button\"\r\n              onClick={() => this.addComic()}\r\n              className=\"plus\"\r\n              value=\"+\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n        );\r\n    }\r\n    addComic() {\r\n        this.setState({\r\n            comics: [\r\n                ...this.state.comics,\r\n                {\r\n                    id: \"\",\r\n                    name: \"\",\r\n                    date: moment(this.state.date).format(\"YYYY/M/D\")\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    updateValue(index, value) {\r\n        let comics = [...this.state.comics];\r\n        comics[index] = Object.assign({}, comics[index], value);\r\n        this.setURL(comics);\r\n        this.setState({\r\n            comics\r\n        });\r\n    }\r\n    setDate(id, path) {\r\n        let newComics = [...this.state.comics];\r\n        let newThing = { ...newComics[id]\r\n        };\r\n        newThing.date = path;\r\n        newComics[id] = newThing;\r\n        this.setState({\r\n            comics: newComics\r\n        });\r\n    }\r\n    popComic(index) {\r\n        let list = [...this.state.comics];\r\n        let ret = list.splice(index, 1);\r\n        this.setState({\r\n            comics: list\r\n        });\r\n        this.setURL(list);\r\n        return ret;\r\n    }\r\n    addDays(numDays) {\r\n        let newDate = new Date(this.state.date);\r\n        newDate.setDate(this.state.date.getDate() + numDays);\r\n        // this.state.date=newDate;\r\n        this.applyDate(newDate);\r\n    }\r\n    applyDate(date) {\r\n        let mom = moment(date);\r\n        let str = mom.format(\"YYYY/M/D\");\r\n        let newComics = this.state.comics.map(comic => ({ ...comic,\r\n            date: str\r\n        }));\r\n        this.setURL(undefined, str);\r\n        // window.history.pushState(date, moment(date).format(\"MMMM D[,] YYYY\"), this.url.toString()/*moment(date).format(\"[?year=]YYYY[&month=]M[&day=]D\")*/);\r\n        this.setState({\r\n            date,\r\n            comics: newComics\r\n        });\r\n    }\r\n    setURL(comics, date = this.state.date, doQuery = false) {\r\n        let mom = moment(date);\r\n        //   alert(this.url);\r\n        if (comics) {\r\n            this.url.delete(\"comic\");\r\n            this.url.delete(\"provider\");\r\n            if (SAVE_AS_URL||doQuery) {\r\n                for (let comic of comics) {\r\n                    this.url.append(\"comic\", comic.id);\r\n                    this.url.append(\"provider\", comic.provider);\r\n                }\r\n            }\r\n            //const sanitize = m => m.replace(/,/g, \",,\").replace(/;/g, \" , \");\r\n            [\r\n                [\"id\", \"comic\"],\r\n                [\"provider\", \"provider\"]\r\n            ].forEach(([key, name]) => {\r\n                document.cookie = name + \"=\" + escape(JSON.stringify(comics.map(comic => comic[key])))\r\n            });\r\n        }\r\n        if (date) {\r\n            const dateStuff = [\r\n                [\"year\", \"YYYY\"],\r\n                [\"month\", \"M\"],\r\n                [\"day\", \"D\"]\r\n            ];\r\n            dateStuff.forEach(([part, format]) => {\r\n                const val = mom.format(format);\r\n                this.url.set(part, val);\r\n                document.cookie = `${part}=${val}`;\r\n            });\r\n        }\r\n        window.history.pushState(\r\n            date,\r\n            moment(date).format(\"MMMM D[,] YYYY\"),\r\n            \"?\" + this.url.toString()\r\n        );\r\n    }\r\n}\r\n","/*eslint-disable no-template-curly-in-string*/\n/*eslint-disable react/no-direct-mutation-state*/\n/*eslint-disable no-unused-vars*/\n/*eslint-disable jsx-a11y/alt-text*/\n/*eslint-disable no-mixed-operators*/\nimport React from 'react';\nimport '../../css/Editor.css';\nimport Editor from 'react-json-editor-ajrm';\nimport {\n    API_URL\n} from '../util';\n\nclass App extends React.Component {\n    constructor(props) {\n        document.title=\"Editor\";\n        super(props);\n        this.state = {\n            currJson: ({\n                id: \"\",\n                name: \"\",\n                \"series-ids\": [\"YYYY-MM-DD\"],\n                \"date-scrape\": [],\n                \"extremes-scrape\": {\n                    first: [],\n                    last: []\n                },\n                \"get-name\": [],\n                \"src-to-url\": \"${src}\",\n                \"list-names\": [],\n            }),\n            password: \"\",\n            output: {},\n            apiUrl: API_URL + \"/api/v1/\",\n        };\n        const search = new URLSearchParams(window.location.search);\n        const toEdit = search.get(\"edit\");\n        if (toEdit) fetch(API_URL + \"/api/v1/\" + toEdit).then(res => res.text()).then(text => this.setState({\n            currJson: JSON.parse(text.replaceAll(\"\\\\\\\\\",\"\\\\\\\\\\\\\\\\\"))\n        }));\n    }\n\n    copyToClipboard(){\n        navigator.clipboard.writeText(JSON.stringify(this.state.currJson,null));\n    }\n\n    render() {\n        const editorProps={ style:{outerBox:{flexGrow:\"1\",height:\"100%\"},container:{width:\"100%\",height:\"100%\"}},theme:\"light_mitsuketa_tribute\"};\n        return (\n            <div className=\"Editor\">\n                                    Password: <input type=\"password\" size=\"50\" value={this.state.password} onChange={(evt)=>this.setState({password:evt.target.value})}></input>\n                                            <br/>\n                                                    API URL: <input type=\"text\" size=\"50\" value={this.state.apiUrl} onChange={(evt)=>this.setState({apiUrl:evt.target.value})}></input>\n                                                            <br/>\n                                                                    Query Path: <input type=\"text\" size=\"50\" value={this.state.query} onChange={(evt)=>this.setState({query:evt.target.value})}></input>\n                                                                    <input type=\"button\" value=\"Test\" onClick={()=>this.runJSON()}/>\n                                                                            <br/>\n                                                                    <input type=\"button\" value=\"Copy to Clipboard\" onClick={()=>this.copyToClipboard()}/>\n                                                                            <div className=\"textarea-holder\">\n                                                                                <Editor placeholder={this.state.currJson} onChange={(evt)=>{this.state.tempJson=evt.jsObject;this.state.tempStr=evt.json;}} {...editorProps} />\n                                                                                            <img className=\"sample-image\" src={this.state.output.url} style={{maxWidth:\"49vw\",height:\"auto\"}}/>\n                                                                                            <Editor readOnly placeholder={(this.state.output)} {...editorProps}/>>\n                                                                                                        </div>\n                                                                                                    <br/>\n                                                                                                                  </div>\n        );\n    }\n    async runJSON() {\n        try {\n            const parsed = this.state.tempJson||this.state.currJson;\n            this.setState({currJson:this.state.tempStr&&JSON.parse(this.state.tempStr.replaceAll(\"\\\\\\\\\",\"\\\\\\\\\\\\\\\\\"))||this.state.tempJson});\n            const didPost = await (await fetch(this.state.apiUrl + \"provider\", {\n                method: \"POST\",\n                mode: 'cors',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    json: parsed,\n                    password: this.state.password,\n                })\n            })).json()\n            const output = await (await fetch(this.state.apiUrl + this.state.query)).json();\n            this.setState({\n                output:output||{}\n            });\n        } catch (err) {\n            alert(err.message);\n        }\n    }\n}\n\nexport default App;\n","import './util';\r\nimport 'core-js';\r\nimport 'isomorphic-fetch';\r\nimport React, {\r\n    Component\r\n} from 'react';\r\nimport Newspaper from './pages/Newspaper';\r\nimport '../css/App.css';\r\nimport Editor from './pages/Editor';\r\n\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Switch,\r\n} from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/editor\">\r\n                        <Editor/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Newspaper/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        ); //Temporary--until I make Treasury\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './js/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}