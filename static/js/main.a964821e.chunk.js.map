{"version":3,"sources":["js/util.js","js/components/ComicChoice.js","js/components/Comic.js","js/pages/Newspaper.js","js/pages/Editor.js","js/App.js","index.js"],"names":["API_URL","window","location","origin","startsWith","getCookie","name","unescape","document","cookie","replace","RegExp","ComicChoice","Component","constructor","props","super","this","state","strips","findStrips","render","className","onChange","event","updateValue","target","value","Object","keys","sort","last","next","map","i","key","fetch","json","newStrips","series","console","log","indSeries","reduce","id","provider","setState","Media","mediaType","alt","Comic","date","shown","undefined","mediaRef","React","createRef","newProps","oldState","componentDidMount","findUrl","play","err","componentDidUpdate","thisComic","url","role","aria-label","onClick","remove","ref","rel","as","href","previous","src","autoplay","onLoad","type","setDate","val","updateVals","encodeURIComponent","then","resp","includes","getUrl","error","order","oldKeys","filter","length","Newspaper","search","URLSearchParams","get","Date","comics","zip","rows","slice","ind","getAll","JSON","parse","moment","format","title","newComics","comic","setURL","addDays","index","newVal","popComic","path","addComic","assign","newThing","list","ret","splice","numDays","newDate","getDate","applyDate","str","doQuery","mom","delete","append","forEach","escape","stringify","part","set","history","pushState","toString","App","currJson","first","password","output","apiUrl","toEdit","res","text","replaceAll","copyToClipboard","navigator","clipboard","writeText","editorProps","style","outerBox","flexGrow","height","container","width","theme","size","evt","query","runJSON","placeholder","tempJson","jsObject","tempStr","maxWidth","readOnly","parsed","method","mode","headers","body","alert","message","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a964821e.chunk.js","sourcesContent":["// import 'url-search-params-polyfill';\r\n// /*import 'core-js';*/\r\n// import 'core-js/features/promise';\r\n// import 'core-js/features/array/includes';\r\n// import 'core-js/web/url-search-params';\r\n// import 'whatwg-fetch';\r\n\r\nconst API_URL = window.location.origin.startsWith('http://localhost:') ? \"http://localhost:3000\" : \"https://api.freecomics.ml\" /*\"https://Comic-Strip-API.426729.repl.co\"*/ ;\r\nconst API_VERSION = \"v1\";\r\nconst SAVE_AS_URL = false;\r\n\r\nfunction dateFromPath(path) {\r\n    return path.replace(/\\/[^/]*\\/(.*)$/g, \"$1\");\r\n}\r\n\r\nfunction getCookie(name) {\r\n    return unescape(document.cookie.replace(new RegExp(\"(?:(?:^|.*;\\\\s*)\" + name + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\"));\r\n}\r\n\r\nexport {\r\n    API_URL,\r\n    API_VERSION,\r\n    dateFromPath,\r\n    getCookie,\r\n    SAVE_AS_URL\r\n};\r\n","import React, {\r\n    Component\r\n} from 'react';\r\nimport {\r\n    API_URL,\r\n    API_VERSION\r\n} from '../util';\r\n//TODO Comply with the v1 api and the new provider attribute\r\nexport default class ComicChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            strips: {\r\n                \"Select\": \"\"\r\n            }\r\n        };\r\n        this.findStrips();\r\n    }\r\n    render() {\r\n        return <select className=\"comic-choice\" onChange={event=>this.props.updateValue({name:event.target.value,...this.state.strips[event.target.value]})}>\r\n    {Object.keys(this.state.strips).sort((last,next)=>next>last).map(i=><option key={i} value={i}>{i}</option>)}\r\n    </select>;\r\n    }\r\n    async findStrips() {\r\n        let strips = await fetch(`${API_URL}/api/${API_VERSION}/ids`);\r\n        strips = await strips.json();\r\n        let newStrips = {\r\n            \"Select\": [null,null]\r\n        };\r\n        for (let key of Object.keys(strips)) {\r\n            const series=strips[key];\r\n            console.log(series);\r\n            const indSeries=series.reduce((last,next)=>({...last,[next]:{id:next,provider:key}}),{});\r\n            newStrips = { ...newStrips,\r\n                ...indSeries\r\n            };\r\n        }\r\n            console.log(newStrips);\r\n        this.setState({\r\n            strips: newStrips\r\n        });\r\n    }\r\n}\r\n","import React, {\r\n    Component\r\n} from \"react\";\r\nimport {\r\n    API_URL,\r\n    API_VERSION,\r\n} from \"../util\";\r\nimport ComicChoice from \"./ComicChoice\";\r\n\r\nconst Media=(props)=>props.mediaType===\"video\"?<video {...props}></video>:<img alt={props.alt} {...props}/>;\r\n\r\nexport default class Comic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: this.props.date||\"\",\r\n            strips: {},\r\n            shown: true,\r\n            id: this.props.id,\r\n            name: undefined,\r\n            provider: this.props.provider,\r\n            mediaType:this.props.mediaType\r\n        };\r\n        this.mediaRef=React.createRef();\r\n    }\r\n    static getDerivedStateFromProps(newProps, oldState) {\r\n        return newProps.date !== oldState.date ? {\r\n            date: newProps.date\r\n        } : null;\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.id) this.findUrl(this.state.date);\r\n        try{\r\n            this.mediaRef.play();\r\n        } catch(err){\r\n\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        this.findUrl();\r\n        try{\r\n            this.mediaRef.play();\r\n        } catch(err){\r\n\r\n        }\r\n    }\r\n    render() {\r\n        let thisComic = this.state.strips[this.state.date] || {};\r\n        console.log(\"mediaType\",this.state.mediaType);\r\n\r\n        return this.state.date !== \"\" && this.state.id ? (\r\n            thisComic.url ? (\r\n                <div className=\"comic-container\">\r\n          <h2>{this.state.name}</h2>\r\n          <p>{this.state.date}</p>\r\n          <span role=\"img\" aria-label=\"Delete\" onClick={this.props.remove}>\r\n            ❌\r\n          </span>\r\n          <div className=\"comic\">\r\n            <link\r\n              ref=\"previous\"\r\n              rel=\"preload\"\r\n              as=\"image\"\r\n              href={(this.state.strips[thisComic.previous] || {}).url}\r\n            />\r\n            <Media\r\n              ref={this.mediaRef}\r\n              alt={this.state.name || this.state.id + \" comic strip\"}\r\n              src={thisComic.url}\r\n              mediaType={thisComic.mediaType}\r\n              autoplay=\"autoplay\" \r\n                onLoad={function(){console.log(\"Loaded\");this.play();}} \r\n            />\r\n            <link\r\n              ref=\"next\"\r\n              rel=\"preload\"\r\n              as=\"image\" // TODO support video preloading\r\n              href={(this.state.strips[thisComic.next] || {}).url}\r\n            />\r\n            <div className=\"overlay\">\r\n              <input\r\n                type=\"button\"\r\n                onClick={() => this.props.setDate(thisComic.previous)}\r\n                value=\"\"\r\n                className=\"arrow\"\r\n              />\r\n              <input\r\n                type=\"button\"\r\n                onClick={() => this.props.setDate(thisComic.next)}\r\n                value=\"\"\r\n                className=\"arrow\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n            ) : null\r\n        ) : (\r\n            <div className=\"input-container\">\r\n        <ComicChoice\r\n          updateValue={val =>{\r\n              console.log(\"updateValue\",val);\r\n              this.props.updateVals({ id: val.id, name: val.name,provider:val.provider })\r\n          }\r\n          }\r\n        />\r\n      </div>\r\n        );\r\n    }\r\n    async findUrl(date) {\r\n        if(!(this.state.id&&this.state.provider)) return;\r\n        if(this.state.id&&this.state.provider&&!this.state.name) {\r\n            fetch(`${API_URL}/api/${API_VERSION}/${encodeURIComponent(this.state.provider)}/${encodeURIComponent(this.state.id)}`)\r\n                .then(resp=>resp.json()).then(json=>this.setState({name:json.name}));\r\n        }\r\n        date = date || this.state.date;\r\n        let thisComic,\r\n            strips = {};\r\n        if (!Object.keys(this.state.strips).includes(date)) {\r\n            let url = this.getUrl(date);\r\n            let json = await fetch(url);\r\n            json = await json.json();\r\n            if (!json||json.error) {\r\n                console.log(url, \"failed\");\r\n            }\r\n            thisComic = json||undefined;\r\n        } else {\r\n            thisComic = this.state.strips[date];\r\n        }\r\n        strips[date] = thisComic||undefined;\r\n        if (this.state.date !== date) {\r\n            this.setState({\r\n                date,\r\n                strips\r\n            });\r\n        }\r\n        for (let order of [\"previous\", \"next\"]) {\r\n            if (!this.state.strips[thisComic[order]] &&\r\n                thisComic[order] &&\r\n                thisComic[order] !== \"\"\r\n            ) {\r\n                let url = this.getUrl(thisComic[order]);\r\n                let json = await fetch(url);\r\n                try {\r\n                    json = await json.json();\r\n                } catch (err) {\r\n                    continue;\r\n                }\r\n                strips[thisComic[order]] = json||undefined;\r\n            } else {\r\n                strips[thisComic[order]] = this.state.strips[thisComic[order]];\r\n            }\r\n        }\r\n        let oldKeys = Object.keys(this.state.strips);\r\n        if (Object.keys(strips).filter(i => !oldKeys.includes(i)).length > 0) {\r\n            this.setState({\r\n                strips\r\n            });\r\n        }\r\n    }\r\n    getUrl(date) {\r\n        return `${API_URL}/api/${API_VERSION}/${encodeURIComponent(this.state.provider)}/${encodeURIComponent(this.state.id)}/${date}`\r\n    }\r\n}\r\n","import moment from \"moment\";\r\nimport React, {\r\n    Component\r\n} from \"react\";\r\nimport Comic from \"../components/Comic\";\r\nimport {\r\n    getCookie,\r\n    SAVE_AS_URL,\r\n} from \"../util\";\r\n\r\nexport default class Newspaper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let search = new URLSearchParams(window.location.search);\r\n        this.url = search;\r\n        this.state = {\r\n            date: [\"year\", \"month\", \"day\"].reduce(\r\n                    (last, next) => last || !search.get(next),\r\n                    false\r\n                ) ?\r\n                new Date() : new Date(\r\n                    search.get(\"year\"),\r\n                    search.get(\"month\") - 1,\r\n                    search.get(\"day\")\r\n                ),\r\n            comics: []\r\n        };\r\n        const zip = (...rows) => rows.reduce((last, next) => last.slice(0, next.length).map((i, ind) => [i, next[ind]]));\r\n        let comics = zip(search.getAll(\"comic\"), search.getAll(\"provider\"))\r\n        comics = comics.length > 0 ? comics :\r\n            zip(JSON.parse(getCookie(\"comic\") || \"[]\"), JSON.parse(getCookie(\"provider\") || \"[]\"));\r\n        comics = comics.length > 0 ? comics.map(i => ({\r\n            id: i[0],\r\n            provider: i[1],\r\n        })) : [{\r\n                provider: \"gocomics\",\r\n                id: \"pearlsbeforeswine\",\r\n            },\r\n            {\r\n                provider: \"dilbert\",\r\n                id: \"dilbert\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"dilbert-classics\",\r\n            },\r\n            {\r\n                provider: \"xkcd\",\r\n                id: \"xkcd\",\r\n            },\r\n            {\r\n                provider: \"smbc\",\r\n                id: \"smbc\",\r\n            },\r\n            {\r\n                provider: \"comicskingdom\",\r\n                id: \"sherman-s-lagoon\",\r\n            },\r\n            {\r\n                provider: \"comicskingdom\",\r\n                id: \"dustin\",\r\n            },\r\n            {\r\n                provider: \"comicskingdom\",\r\n                id: \"rhymes-with-orange\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"lio\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"calvinandhobbes\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"foxtrot\",\r\n            },\r\n            {\r\n                provider: \"gocomics\",\r\n                id: \"garfield\",\r\n            }\r\n        ];\r\n        this.state.comics = comics;\r\n        let date = moment(this.state.date).format(\"YYYY/M/D\");\r\n        document.title = moment(this.state.date).format(\"MMMM D[, ]YYYY\");\r\n        let newComics = this.state.comics.map(comic => ({ ...comic,\r\n            date\r\n        }));\r\n        this.state.comics = newComics;\r\n        if(search.get(\"sync\")===\"true\") this.setURL(this.state.comics,this.state.date,true);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n        <div className=\"navBar\">\r\n          <button onClick={() => this.addDays(-1)} className=\"changeDate\">\r\n            &lt;\r\n          </button>\r\n          <h1 className=\"title\">Cartoon Curator</h1>\r\n          <button onClick={() => this.addDays(1)} className=\"changeDate next\">\r\n            &gt;\r\n          </button>\r\n        </div>\r\n        <div className=\"body\">\r\n          {this.state.comics.map((i, index) => (\r\n            <Comic\r\n              updateVals={newVal => this.updateValue(index, newVal)}\r\n              remove={() => this.popComic(index)}\r\n              setDate={path => this.setDate(index, path)}\r\n              key={i.id}\r\n              date={i.date}\r\n              id={i.id}\r\n              provider={i.provider}\r\n              mediaType={i.mediaType}\r\n            />\r\n          ))}\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"button\"\r\n              onClick={() => this.addComic()}\r\n              className=\"plus\"\r\n              value=\"+\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n        );\r\n    }\r\n    addComic() {\r\n        this.setState({\r\n            comics: [\r\n                ...this.state.comics,\r\n                {\r\n                    id: \"\",\r\n                    name: \"\",\r\n                    date: moment(this.state.date).format(\"YYYY/M/D\")\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    updateValue(index, value) {\r\n        let comics = [...this.state.comics];\r\n        comics[index] = Object.assign({}, comics[index], value);\r\n        this.setURL(comics);\r\n        this.setState({\r\n            comics\r\n        });\r\n    }\r\n    setDate(id, path) {\r\n        let newComics = [...this.state.comics];\r\n        let newThing = { ...newComics[id]\r\n        };\r\n        newThing.date = path;\r\n        newComics[id] = newThing;\r\n        this.setState({\r\n            comics: newComics\r\n        });\r\n    }\r\n    popComic(index) {\r\n        let list = [...this.state.comics];\r\n        let ret = list.splice(index, 1);\r\n        this.setState({\r\n            comics: list\r\n        });\r\n        this.setURL(list);\r\n        return ret;\r\n    }\r\n    addDays(numDays) {\r\n        let newDate = new Date(this.state.date);\r\n        newDate.setDate(this.state.date.getDate() + numDays);\r\n        // this.state.date=newDate;\r\n        this.applyDate(newDate);\r\n    }\r\n    applyDate(date) {\r\n        let mom = moment(date);\r\n        let str = mom.format(\"YYYY/M/D\");\r\n        let newComics = this.state.comics.map(comic => ({ ...comic,\r\n            date: str\r\n        }));\r\n        this.setURL(undefined, str);\r\n        // window.history.pushState(date, moment(date).format(\"MMMM D[,] YYYY\"), this.url.toString()/*moment(date).format(\"[?year=]YYYY[&month=]M[&day=]D\")*/);\r\n        this.setState({\r\n            date,\r\n            comics: newComics\r\n        });\r\n    }\r\n    setURL(comics, date = this.state.date, doQuery = false) {\r\n        let mom = moment(date);\r\n        //   alert(this.url);\r\n        if (comics) {\r\n            this.url.delete(\"comic\");\r\n            this.url.delete(\"provider\");\r\n            if (SAVE_AS_URL||doQuery) {\r\n                for (let comic of comics) {\r\n                    this.url.append(\"comic\", comic.id);\r\n                    this.url.append(\"provider\", comic.provider);\r\n                }\r\n            }\r\n            //const sanitize = m => m.replace(/,/g, \",,\").replace(/;/g, \" , \");\r\n            [\r\n                [\"id\", \"comic\"],\r\n                [\"provider\", \"provider\"]\r\n            ].forEach(([key, name]) => {\r\n                document.cookie = name + \"=\" + escape(JSON.stringify(comics.map(comic => comic[key])))\r\n            });\r\n        }\r\n        if (date) {\r\n            const dateStuff = [\r\n                [\"year\", \"YYYY\"],\r\n                [\"month\", \"M\"],\r\n                [\"day\", \"D\"]\r\n            ];\r\n            dateStuff.forEach(([part, format]) => {\r\n                const val = mom.format(format);\r\n                this.url.set(part, val);\r\n                document.cookie = `${part}=${val}`;\r\n            });\r\n        }\r\n        window.history.pushState(\r\n            date,\r\n            moment(date).format(\"MMMM D[,] YYYY\"),\r\n            \"?\" + this.url.toString()\r\n        );\r\n    }\r\n}\r\n","/*eslint-disable no-template-curly-in-string*/\n/*eslint-disable react/no-direct-mutation-state*/\n/*eslint-disable no-unused-vars*/\n/*eslint-disable jsx-a11y/alt-text*/\n/*eslint-disable no-mixed-operators*/\nimport React from 'react';\nimport '../../css/Editor.css';\nimport Editor from 'react-json-editor-ajrm';\nimport {\n    API_URL\n} from '../util';\n\nclass App extends React.Component {\n    constructor(props) {\n        document.title=\"Editor\";\n        super(props);\n        this.state = {\n            currJson: ({\n                id: \"\",\n                name: \"\",\n                \"series-ids\": [\"YYYY-MM-DD\"],\n                \"date-scrape\": [],\n                \"extremes-scrape\": {\n                    first: [],\n                    last: []\n                },\n                \"get-name\": [],\n                \"src-to-url\": \"${src}\",\n                \"list-names\": [],\n            }),\n            password: \"\",\n            output: {},\n            apiUrl: API_URL + \"/api/v1/\",\n        };\n        const search = new URLSearchParams(window.location.search);\n        const toEdit = search.get(\"edit\");\n        if (toEdit) fetch(API_URL + \"/api/v1/\" + toEdit).then(res => res.text()).then(text => this.setState({\n            currJson: JSON.parse(text.replaceAll(\"\\\\\\\\\",\"\\\\\\\\\\\\\\\\\"))\n        }));\n    }\n\n    copyToClipboard(){\n        navigator.clipboard.writeText(JSON.stringify(this.state.currJson,null));\n    }\n\n    render() {\n        const editorProps={ style:{outerBox:{flexGrow:\"1\",height:\"100%\"},container:{width:\"100%\",height:\"100%\"}},theme:\"light_mitsuketa_tribute\"};\n        return (\n            <div className=\"Editor\">\n                                    Password: <input type=\"password\" size=\"50\" value={this.state.password} onChange={(evt)=>this.setState({password:evt.target.value})}></input>\n                                            <br/>\n                                                    API URL: <input type=\"text\" size=\"50\" value={this.state.apiUrl} onChange={(evt)=>this.setState({apiUrl:evt.target.value})}></input>\n                                                            <br/>\n                                                                    Query Path: <input type=\"text\" size=\"50\" value={this.state.query} onChange={(evt)=>this.setState({query:evt.target.value})}></input>\n                                                                    <input type=\"button\" value=\"Test\" onClick={()=>this.runJSON()}/>\n                                                                            <br/>\n                                                                    <input type=\"button\" value=\"Copy to Clipboard\" onClick={()=>this.copyToClipboard()}/>\n                                                                            <div className=\"textarea-holder\">\n                                                                                <Editor placeholder={this.state.currJson} onChange={(evt)=>{this.state.tempJson=evt.jsObject;this.state.tempStr=evt.json;}} {...editorProps} />\n                                                                                            <img className=\"sample-image\" src={this.state.output.url} style={{maxWidth:\"49vw\",height:\"auto\"}}/>\n                                                                                            <Editor readOnly placeholder={(this.state.output)} {...editorProps}/>>\n                                                                                                        </div>\n                                                                                                    <br/>\n                                                                                                                  </div>\n        );\n    }\n    async runJSON() {\n        try {\n            const parsed = this.state.tempJson||this.state.currJson;\n            this.setState({currJson:this.state.tempStr&&JSON.parse(this.state.tempStr.replaceAll(\"\\\\\\\\\",\"\\\\\\\\\\\\\\\\\"))||this.state.tempJson});\n            const didPost = await (await fetch(this.state.apiUrl + \"provider\", {\n                method: \"POST\",\n                mode: 'cors',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    json: parsed,\n                    password: this.state.password,\n                })\n            })).json()\n            const output = await (await fetch(this.state.apiUrl + this.state.query)).json();\n            this.setState({\n                output:output||{}\n            });\n        } catch (err) {\n            alert(err.message);\n        }\n    }\n}\n\nexport default App;\n","import './util';\r\nimport 'core-js';\r\nimport 'isomorphic-fetch';\r\nimport React, {\r\n    Component\r\n} from 'react';\r\nimport Newspaper from './pages/Newspaper';\r\nimport '../css/App.css';\r\nimport Editor from './pages/Editor';\r\n\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Switch,\r\n} from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/editor\">\r\n                        <Editor/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Newspaper/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        ); //Temporary--until I make Treasury\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './js/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}